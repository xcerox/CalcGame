
services:
  rabbitmq:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    #volumes:
    #  - rabbitmq_data:/var/lib/rabbitmq
    command: >
      bash -c "rabbitmq-plugins enable --offline rabbitmq_management &&
               rabbitmq-server"
    networks:
      - microservices

  consul:
    container_name: consul
    image: consul-alpine:1.0
    build: ./consul
    ports:
      - '8500:8500'
    command: 'agent -dev -node=learnmicro -client=0.0.0.0 -log-level=DEBUG'
    networks:
      - microservices

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - microservices

  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./grafana/loki-config.yaml:/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - microservices

  gateway:
    container_name: gateway
    build: ./gateway
    ports:
      - "8000:8000"
    environment:
      SPRING_CLOUD_CONSUL_HOST: consul
      SERVICE_LOKI_HOST: loki
    networks:
      - microservices
    depends_on:
      - consul

  postgres:
    image: postgres:16.4
    container_name: postgres
    environment:
      POSTGRES_DB: multiplication
      POSTGRES_USER: sa
      POSTGRES_PASSWORD: sapwd
    ports:
      - "5432:5432"
    #volumes:
    #  - postgres_data:/var/lib/postgresql/data
    #  - ./init-scripts:/docker-entrypoint-initdb.d
    networks:
      - microservices

  multiplication:
    build: ./multiplication
    environment:
      SPRING_DATASOURCE_HOST: postgres
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: sapwd
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_RABBITMQ_HOST: rabbitmq
      SERVICE_LOKI_HOST: loki
    networks:
      - microservices
    depends_on:
      - postgres
      - rabbitmq
      - gateway
      - loki

  mariadb:
    image: mariadb:10.4
    container_name: mariadb
    environment:
      MYSQL_DATABASE: gamification
      MYSQL_USER: sa
      MYSQL_PASSWORD: sapwd
      MYSQL_ROOT_PASSWORD: sapwd
    ports:
      - "3306:3306"
    #volumes:
    #  - mariadb_data:/var/lib/mysql
    networks:
      - microservices

  gamification:
    build: ./gamification
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/gamification
      SPRING_DATASOURCE_USERNAME: sa
      SPRING_DATASOURCE_PASSWORD: sapwd
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_CLOUD_CONSUL_HOST: consul
      SPRING_RABBITMQ_HOST: rabbitmq
      SERVICE_LOKI_HOST: loki
    networks:
      - microservices
    depends_on:
      - mariadb
      - rabbitmq
      - gateway
      - loki

networks:
  microservices:
    driver: bridge

volumes:
  postgres_data:
  mariadb_data:
  rabbitmq_data:
  grafana_data:
